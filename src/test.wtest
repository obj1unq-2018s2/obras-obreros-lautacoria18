import obra.*
import obrero.*
describe "obra"{
	
	var obra1= new Obra()
	
	var obra2= new Obra()

	var casa1= new Casa()

	var albanil1= new Albanil(estaDeLicencia= true)
	
	var albanil2= new Albanil(estaDeLicencia= false)
	
	var gasista1= new Gasista(estaDeLicencia= false)
	
	var gasista2= new Gasista(estaDeLicencia= false)
	
	var plomero1= new Plomero(estaDeLicencia= false)
	
	///Punto 2
	
	var plomero2= new Plomero(estaDeLicencia= false)
	
	var albanil3= new Albanil(estaDeLicencia= false)
	
	var gasista3= new Gasista(estaDeLicencia= false)
	
	var electricista1 = new Electricista(estaDeLicencia= false)
	
	var electricista2 = new Electricista(estaDeLicencia= false)
	var electricista3 = new Electricista(estaDeLicencia= false)
	var electricista4 = new Electricista(estaDeLicencia= false)
	var electricista5 = new Electricista(estaDeLicencia= false)
	
	
	
	var edificio1= new Edificio()
	


fixture {
	
	obra1.obreros(#{albanil1, albanil2, gasista1, gasista2, plomero1})
	obra1.stockLadrillo(1000)
	obra1.stockCanio(400)
	obra1.stockFosforo(8000)
	obra1.stockArandela(500)
	
	
	///////PUNTO2 
	
	casa1.obreros(#{albanil1, albanil2, gasista1, gasista2, plomero1, electricista1, electricista2, electricista3, electricista4, electricista5})
	casa1.cantHabitaciones(1)
	casa1.cantBanios(1)
	
	
	edificio1.obreros(
		#{albanil1, albanil2, gasista1, gasista2, plomero1, electricista1, electricista2, electricista3, electricista4, electricista5}
	)
	edificio1.cantPisos(1)
	edificio1.departamentosPorPiso(1)
	edificio1.habitacionesPorDepartamento(2)
	edificio1.cantAscensores(1)
}	


test "obrerosDisponibles" {

	obra1.obrerosDisponibles()
	assert.equals(#{albanil2, gasista1, gasista2, plomero1}, obra1.obrerosDisponibles())

}


test "registrarJornada"{
	
	obra1.registrarJornadaLaboral()
	assert.equals(900, obra1.stockLadrillo())
	assert.equals(384, obra1.stockCanio())
	assert.equals(7960, obra1.stockFosforo())
	assert.equals(470, obra1.stockArandela())
	
}

test "encontrarObrero"{
	
	assert.equals(true, obra1.tieneAObrero(albanil2))
	
}

test "error cuando no hay obreros"{
	
	obra2.registrarJornadaLaboral()
	assert.equals(900, obra2.stockLadrillo())
	}
	
test "error cuando renuncia obrero" {
	
	obra1.renunciaObrero(albanil1)
	assert.equals(#{gasista1}, obra1.obreros())
	
	
}

test "jornada laboral con material b"{
	
	casa1.registrarJornadaLaboral()
	assert.equals(3, casa1.metrosCuadradosPared())
	assert.equals(2, casa1.implementosGas())
	assert.equals(0.5, casa1.implementosAgua())
	assert.equals(20, casa1.metrosCableElectrico())
		
	}
	
test "casaestaTerminado"{
	
		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
	//	casa1.registrarJornadaLaboral() 
		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral()
		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
////		casa1.registrarJornadaLaboral() 
///		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 		
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
//		casa1.registrarJornadaLaboral() 
	//	casa1.registrarJornadaLaboral()  
		
		assert.that(casa1.estaTerminada())
						

	
}
	test "edificoestaterminado" {
		
		edificio1.registrarJornadaLaboral()

		
		assert.that(edificio1.estaTerminada())
	}
	
	test"pago" {
		

		obra1.registrarJornadaLaboral()
		obra1.registrarJornadaLaboral()
		obra1.registrarJornadaLaboral()
		assert.equals(3, albanil2.jornalesAdeudados())
		assert.equals(6000, albanil2.totalDeudaSueldo(uocra))
		
	}
	
	test "diferencia" {
		
		obra1.registrarJornadaLaboral()
		obra1.registrarJornadaLaboral()
		obra1.registrarPago()
		assert.equals(78000, obra1.efectivo())
		
	}
	
	test "total Deuda" {
		
		obra1.registrarJornadaLaboral()
		assert.equals(11000, obra1.totalDeuda())
	}
}

